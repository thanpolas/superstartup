#!/bin/bash
###
### Automatically push to production and staging installations
###

git-update-server-info

### Get current branch that was pushed
ref=$1

###
### SETTINGS AND PATHS
###

### Set branches that we will trigger on
live="refs/heads/master"
staging="refs/heads/next"

### Set paths here
masterRoot="/home/116255/users/.home/domains/"
livePath=$masterRoot"superstartup.org"
stagingPath=$masterRoot"staging.superstartup.org"
# set deployment preparation paths
deployRootPath=$masterRoot"deploy-superstartup"
deplyPath=$deployRootPath"/deploys/"
configLive=$deployPath"/config/production"
configStaging=$deployPath"/config/staging"
gitPrototype=$deployPath"/git-prototype"

# Set path to CI's root and config folder
CIrootPath="engine/CI/origin"
CIconfigPath="engine/CI/origin/application/config"


# Set where CI's environment PHP file is (included by index.php)
# This file should be included in the .gitignore file to avoid
# merge conflicts. We overwrite this file on each push
envFile="/html/php/env.php"

# Set the location of the post-update script. git repo will ln -s to this
postUpdate="/engine/bin/git/post-update"

### Set string to echo on environment file depending on environment
envPHPmaster="<?php define('ENVIRONMENT', 'production'); ?>"
envPHPbeta="<?php define('ENVIRONMENT', 'staging'); ?>"

###
### SCRIPT STARTS HERE
###


### Check if we got 'beta' or 'master' branches pushed
### and update live installations

echo "*** Checking if pushed branch is next or master..."

if [ "$ref" = "$live" ]
then
  echo "*** master branch pushed. Deploying on LIVE site"


  cd $livePath
  env -i git reset --hard
  ### Secure environment after the reset
  echo $envPHPmaster > $livePath$envFile

  env -i git pull grid master
  ### Secure environment after the pull
  echo $envPHPmaster > $livePath$envFile

  ### Make post-update executable, git repo's hook is linked
  ### to this file
  chmod a+x $livePath$postUpdate
  
  ## init and update submodules
  env -i git submodule init
  env -i git submodule update
  
  # get a random path
  newFullPath=$deplyPath"superstartup_"$RANDOM"/"
  
  # copy our git prototype there
  cp -R $gitPrototype $newFullPath
  
  cd $newFullPath
  env -i git pull grid master
  ## init and update submodules
  echo "Updating submodules..."
  env -i git submodule init
  env -i git submodule update
  # init CI's submodules  
  echo "Updating CI's submodules..."
  cd $newFullPath$CIrootPath
  env -i git submodule init
  env -i git submodule update
  # overwrite our config file
  echo "Overwriting LIVE config files..."
  cp -fR $configLive $newFullPath$CIconfigPath
  
  ### Secure environment after the pull
  echo $envPHPmaster > $newFullPath$envFile
  
  ### Make post-update executable, git repo's hook is linked
  ### to this file
  chmod a+x  $newFullPath$postUpdate  
  
  echo "*** LIVE DEPLOYED-"

fi


###
### Go for the beta, checkout the git command to fit your own needs
###
if [ "$ref" = "$beta" ]
then
  echo "*** next branch pushed. Deploying on staging site"

  cd $betaPath
  env -i git reset --hard
  ### Secure environment after the reset
  echo $envPHPbeta > $betaPath$envFile

  env -i git pull grid beta
  ### Secure environment after the pull
  echo $envPHPbeta > $betaPath$envFile

  ### Make post-update executable, git repo's hook is linked
  ### to this file
  chmod a+x $betaPath$postUpdate

  echo "*** STAGING DEPLOYED"

fi

##

